name: Release
run-name: Release ${{ github.ref_name }}
on:
  push:
    tags:
      - v*
  workflow_dispatch:
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    env:
      NEXTJS_WORKING_DIRECTORY: web
      DOCKER_IMAGE_NAME: ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Sign into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker images
        id: docker-build-push-action
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.ref_name }},${{ env.DOCKER_IMAGE_NAME }}:latest
      - name: Generate signed build provenance attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.DOCKER_IMAGE_NAME }}
          subject-digest: ${{ steps.docker-build-push-action.outputs.digest }}
      - name: Trigger webhook
        run: |
          curl ${{ secrets.WEBHOOK_URL }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: ${{ env.NEXTJS_WORKING_DIRECTORY }}/package-lock.json
      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: ${{ env.NEXTJS_WORKING_DIRECTORY }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]sx?') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - name: Build
        run: make build
      - name: Create release ZIP files
        run: |
          cd out
          for filename in *; do
            if [[ -d $filename ]]; then
              mv $filename ${{ github.event.repository.name }}
              zip -rm ${{ github.event.repository.name }}-${{ github.ref_name }}-$filename.zip ${{ github.event.repository.name }}
            fi
          done
      - name: Release on GitHub
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631
        with:
          tag_name: ${{ github.ref_name }}
          draft: false
          generate_release_notes: true
          files: out/*.zip
      - name: Generate signed build provenance attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: out/*.zip
